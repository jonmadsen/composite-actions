name: 'Gradle Verify Artifact Not Exist'
description: 'Provides action to run a gradle task to verify that artifact does not exist'
inputs:
  artifactoryUsername:
    description: 'Artifactory Username'
    required: true
  artifactoryPassword:
    description: 'Artifactory Password'
    required: true
  version:
    description: 'Artifact Version to Check for'
    required: true

runs:
  using: "composite"
  steps:
    - name: Gradle Build Env
      # TODO:  This is no good, this means that if say we had a action package published of
      # version 1.0.5, that this would always refer to the actions of master, and master could
      # be at a later version say 2.0.0, so eessentially this use is not guaranteed to reference
      # an action in the same release that it is published in unless the published release being
      # used is always the latest.
      # Ideally we would just reference the local action, and when the release was packaged
      # it would always reference that, or we somehow tie the release version into this
      # reference like `jonmadsen/composite-actions/gradleEnv@<Version Variable>
      uses: jonmadsen/composite-actions/gradleEnv@master
    - name: Validate Version
      uses: rubenesp87/semver-validation-action@0.0.6
      with:
        version: ${{ inputs.version }}
#    - uses: jfrog/setup-jfrog-cli@v1
    # TODO: Remove this debug step
    - name: Dump User In Action
      shell: bash
      run: echo ${{ inputs.artifactoryUsername }}
    - name: Verify Artifact Not Exist
      uses: gradle/gradle-build-action@v2
      with:
        arguments: |
          verifyArtifactDoesNotExist
          -Pversion=${{ inputs.version }}
          -Partifactory_user=${{ inputs.artifactoryUsername }}
          -Partifactory_password=${{ inputs.artifactoryPassword }}
